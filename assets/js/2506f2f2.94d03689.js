"use strict";(self.webpackChunkjustthoughts=self.webpackChunkjustthoughts||[]).push([[3455],{1067:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>h,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var i=n(5893),a=n(1151);const s={title:"New Note 2023-11-20 21:13:00",author:"Martin Christoph Frank",author_title:"Starting This Project Officially",author_url:"https://github.com/m-c-frank",author_image_url:"https://github.com/m-c-frank.png",tags:["note","kickoff"]},o=void 0,r={permalink:"/blog/2023/11/20/21-13-00-note",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-11-20-21-13-00-note.md",source:"@site/blog/2023-11-20-21-13-00-note.md",title:"New Note 2023-11-20 21:13:00",description:"i will create a system that publishes simple notes.",date:"2023-11-20T00:00:00.000Z",formattedDate:"November 20, 2023",tags:[{label:"note",permalink:"/blog/tags/note"},{label:"kickoff",permalink:"/blog/tags/kickoff"}],readingTime:1.6,hasTruncateMarker:!1,authors:[{name:"Martin Christoph Frank",title:"Starting This Project Officially",url:"https://github.com/m-c-frank",imageURL:"https://github.com/m-c-frank.png"}],frontMatter:{title:"New Note 2023-11-20 21:13:00",author:"Martin Christoph Frank",author_title:"Starting This Project Officially",author_url:"https://github.com/m-c-frank",author_image_url:"https://github.com/m-c-frank.png",tags:["note","kickoff"]},unlisted:!1,nextItem:{title:"Welcome",permalink:"/blog/welcome"}},h={authorsImageUrls:[void 0]},l=[];function c(t){const e={a:"a",li:"li",p:"p",ul:"ul",...(0,a.a)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"i will create a system that publishes simple notes.\ni have bigger plans with this but this is the start to externalize my ideas."}),"\n",(0,i.jsx)(e.p,{children:"the next step is to create the script that lets me develop this tool more effectively.\nthat will be the case when i can automatically add this repo itself as a submodule and use the different branches to act as the directories.\nthis way the structure stays very flat."}),"\n",(0,i.jsxs)(e.p,{children:["but each branch itself will have its own README.md when a new change in the repo happens a workflow will move this branches readme to the documentation pages in the main branch and publish the newest version.\nhere is the draft: ",(0,i.jsx)(e.a,{href:"https://chat.openai.com/share/cc85351b-750b-45bf-a837-1c854d791f4b",children:"ChatGPT conversation"})]}),"\n",(0,i.jsx)(e.p,{children:"i also need to change the note name to something more meaningful and maybe start it with an incrementing index."}),"\n",(0,i.jsx)(e.p,{children:"maybe thats what i need to do:\nhelp people define what their problems are"}),"\n",(0,i.jsx)(e.p,{children:"use the zero assumptions approach"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"just ask if anything is unclear"}),"\n",(0,i.jsx)(e.li,{children:"we can bot just assume neither of us knows anyhting"}),"\n",(0,i.jsx)(e.li,{children:"if somethings is not clear justask (tm) lol"}),"\n",(0,i.jsx)(e.li,{children:"i think this needs to be integrated in vimwiki or the other way around. but i actually like this as a better note taking tool"}),"\n",(0,i.jsx)(e.li,{children:"i guess i just need a way to have shortcuts in nvim itself to do the linking stuff easier and to do everything."}),"\n",(0,i.jsx)(e.li,{children:"i guess its just a nvim issue to find out how to do all this and this repo is just for publishing these notes."}),"\n",(0,i.jsx)(e.li,{children:"i could have one instance for my private notes aswell."}),"\n",(0,i.jsx)(e.li,{children:"and i can add a script in the scripts branch to create a new blog entry in the default private notes location. and so on"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"im going to bed now but so far i am still able to get in the flow to do them. lets see when that stops happening."})]})}function u(t={}){const{wrapper:e}={...(0,a.a)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(c,{...t})}):c(t)}},1151:(t,e,n)=>{n.d(e,{Z:()=>r,a:()=>o});var i=n(7294);const a={},s=i.createContext(a);function o(t){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),i.createElement(s.Provider,{value:e},t.children)}}}]);