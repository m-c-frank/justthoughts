name: issueblogger

on:
  issues:
    types: [closed]

jobs:
  generate-blog-post:
    runs-on: ubuntu-latest
    env:
      ISSUE_TITLE: ${{ github.event.issue.title }}
      ISSUE_NUMBER: ${{ github.event.issue.number }}
      BRANCH_NAME: "${{ github.event.issue.number }}-issueblogger"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Update Submodules to Latest Commit on Specified Branch
        run: |
          git submodule update --init --recursive
          git submodule foreach --recursive 'branch="$(git config -f $toplevel/.gitmodules submodule.$name.branch)"; git pull origin $branch'

      - name: Fetch Issue Data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch Issue Details
          curl -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER" > issue_details.json
          
          # Fetch Comments
          curl -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments" > issue_comments.json

          # Combine issue details and comments into one file
          echo '{"issue_data":' > issue_data.json
          cat issue_details.json >> issue_data.json
          echo ',"comments":' >> issue_data.json
          cat issue_comments.json >> issue_data.json
          echo '}' >> issue_data.json

      - name: Build Docker Image
        run: docker build -t issueblogger -f scripts/Dockerfile .

      - name: Generate Content
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: docker run --rm -e OPENAI_API_KEY -v ${{ github.workspace }}:/data issueblogger python /usr/src/app/scripts/issueblogger.py /data/issue_data.json

      - name: Commit and Push Changes
        run: |
          git config user.name 'github-actions'
          git config user.email 'github-actions@github.com'
          git add ./blog/${ISSUE_NUMBER}-new-post.md
          git commit -m "Add new blog post for issue #${ISSUE_NUMBER}"
          git push

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add new blog post for issue #${ISSUE_NUMBER}"
          title: "Blog Post: $ISSUE_NUMBER - $ISSUE_TITLE"
          branch: $BRANCH_NAME

